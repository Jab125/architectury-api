plugins {
    id "com.matthewprenger.cursegradle"
}

apply plugin: "com.github.johnrengelman.shadow"

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    mixin { useLegacyMixinAp = true }
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

repositories {
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    modLocalRuntime("com.terraformersmc:modmenu:${rootProject.mod_menu_version}") { transitive false }
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    buildSrc.getModules().each {
        implementation project(":fabric").sourceSets.maybeCreate(it.key).output
        implementation project(":common").sourceSets.maybeCreate(it.key).output
    }

    // Depend on base mod too.
    implementation project(":common").sourceSets.main.output
    implementation project(":fabric").sourceSets.main.output

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    common(project(path: ":testmod-common", configuration: "namedElements")) { transitive false }
}
